name: Test And Update Docs

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true
permissions:
  contents: read

jobs:
  test-and-update-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23.0

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Copy config.yaml
        run: cp -f .github/config.yaml config.yaml

      - name: Start mysql
        run: |
          docker-compose -f docker-compose.yaml up -d leap-ledger-mysql leap-ledger-nats leap-ledger-redis

      - name: Wait for MySQL to be ready
        run: |
          # Set the maximum retry count and interval (e.g., 30 retries, 5 seconds each)
          max_retries=30
          retries=0
          until docker exec leap-ledger-mysql mysqladmin -u root -p"$MYSQL_ROOT_PASSWORD" ping --silent; do
            if [ $retries -ge $max_retries ]; then
              echo "MySQL failed to start after $max_retries retries!"
              exit 1
            fi
            retries=$((retries + 1))
            echo "Waiting for MySQL to be ready... Retry $retries/$max_retries"
            sleep 5
          done

      - name: Go mod
        run: |
          sudo chmod -R 666 ./docker
          go mod download
          go mod tidy

      - name: Exec test
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go test -timeout 5m -v 2>&1 ./... -coverprofile=docs/coverage.out | tee docs/test-process.log
          go-junit-report < docs/test-process.log > docs/test-report.xml

      - name: Upload test-report.xml
        uses: actions/upload-artifact@v4
        with:
          name: test-report.xml
          path: docs/test-report.xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: docs/coverage.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: docs/test-report.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Update docs
        run: |
          sudo chmod -R 777 ./
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -p pascalcase

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -u docs/docs.go docs/swagger.json docs/swagger.yaml
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
          else
            git commit -m "update docs" || echo "No changes to commit."
            git push origin ${{ inputs.ref }}
        continue-on-error: true

      - name: Docker Compose Down
        run: |
          docker-compose -f docker-compose.yaml down